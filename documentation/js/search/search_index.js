var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.263,1,1.477]],["body/controllers/AppController.html",[0,1.819,1,2.126,2,1.396,3,0.883,4,0.752,5,0.752,6,2.324,7,0.635,8,1.562,9,3.568,10,2.324,11,0.058,12,1.199,13,2.925,14,1.199,15,2.126,16,1.151,17,0.752,18,1.738,19,2.324,20,0.883,21,0.527,22,1.632,23,2.324,24,1.199,25,2.925,26,0.043,27,0.043]],["title/modules/AppModule.html",[28,1.263,29,1.477]],["body/modules/AppModule.html",[1,2.032,2,1.489,3,0.659,4,0.562,5,0.562,11,0.058,16,1.39,17,0.562,18,1.792,19,1.735,20,0.659,21,0.394,26,0.035,27,0.035,28,1.738,29,2.651,30,1.042,31,1.042,32,1.439,33,1.439,34,1.042,35,2.4,36,1.439,37,1.735,38,1.735,39,1.735,40,2.086,41,1.54,42,2.057,43,1.439,44,1.439,45,2.184,46,2.48,47,2.184,48,1.735,49,1.439,50,2.184,51,3.121,52,2.184,53,3.121,54,2.184,55,2.184,56,2.184,57,2.184,58,2.184]],["title/injectables/AppService.html",[18,1.085,59,0.933]],["body/injectables/AppService.html",[3,0.944,4,0.804,5,0.804,7,0.678,8,1.631,9,3.658,11,0.057,12,1.282,14,1.282,15,2.219,16,0.944,17,0.804,18,1.631,20,0.944,21,0.564,24,1.282,26,0.045,27,0.045,59,1.402,60,1.744,61,2.484,62,3.127,63,3.127,64,3.127]],["title/controllers/MoviesController.html",[0,1.263,65,1.477]],["body/controllers/MoviesController.html",[0,0.702,2,0.702,3,0.444,4,0.378,5,0.378,7,0.319,8,0.95,10,2.279,11,0.059,12,1.176,14,1.176,15,1.976,16,1.136,17,0.378,20,0.444,21,0.265,22,0.821,23,1.168,24,1.334,26,0.026,27,0.026,65,1.293,66,1.168,67,1.471,68,2.814,69,2.398,70,2.279,71,2.586,72,1.841,73,1.471,74,2.989,75,1.471,76,1.293,77,1.471,78,1.528,79,1.6,80,1.106,81,1.528,82,2.279,83,1.471,84,1.471,85,2.318,86,1.471,87,2.586,88,2.318,89,1.471,90,1.471,91,2.318,92,1.471,93,0.95,94,1.168,95,1.471,96,0.969,97,1.471,98,1.471,99,1.471,100,1.471,101,1.168,102,1.471,103,1.471,104,1.6,105,2.343,106,1.6,107,1.471,108,1.891,109,1.369,110,2.869,111,1.841,112,1.168,113,2.989,114,1.471,115,1.471,116,1.471,117,1.471,118,1.471,119,1.471,120,1.841,121,1.471,122,1.471,123,1.471,124,1.471,125,1.471,126,1.471,127,0.969,128,1.471]],["title/modules/MoviesModule.html",[28,1.263,40,1.263]],["body/modules/MoviesModule.html",[2,1.632,3,0.751,4,0.64,5,0.64,11,0.058,16,1.332,17,0.64,20,0.751,21,0.449,26,0.039,27,0.039,28,1.865,30,1.187,31,1.187,32,1.64,33,1.64,34,1.187,35,2.575,36,1.64,40,2.269,41,1.606,42,2.254,43,1.64,44,1.64,46,1.977,48,2.717,49,1.64,65,2.18,93,1.868,94,1.977,129,1.977,130,1.977,131,2.489,132,2.489,133,1.977]],["title/injectables/MoviesService.html",[59,0.933,93,1.085]],["body/injectables/MoviesService.html",[3,0.46,4,0.392,5,0.392,7,0.331,8,0.977,11,0.059,12,1.361,14,1.204,16,1.003,17,0.392,20,0.46,21,0.275,22,0.851,24,1.204,26,0.027,27,0.027,41,1.17,59,0.84,60,0.851,68,2.333,69,2.369,70,2.333,71,1.894,72,2.333,78,2.188,79,1.852,80,1.823,81,2.188,87,1.211,93,0.977,101,1.211,104,1.852,105,2.131,106,1.638,108,1.935,109,1.401,112,1.211,113,2.863,120,1.894,127,2.518,133,1.211,134,1.211,135,1.211,136,1.525,137,1.525,138,2.936,139,2.384,140,2.936,141,1.525,142,1.894,143,2.384,144,2.384,145,1.525,146,2.384,147,1.525,148,3.32,149,1.525,150,2.936,151,1.005,152,2.936,153,1.894,154,2.936,155,2.936,156,1.525,157,2.936,158,1.525,159,1.525,160,2.936,161,1.525,162,1.525]],["title/injectables/PrismaService.html",[41,0.933,59,0.933]],["body/injectables/PrismaService.html",[3,0.878,4,0.748,5,0.748,7,0.631,8,1.556,11,0.057,12,1.192,14,1.192,16,1.146,17,0.748,20,0.878,21,0.524,26,0.043,27,0.043,41,1.338,59,1.338,60,1.623,69,2.358,106,1.623,151,1.917,163,2.311,164,3.797,165,4.227,166,4.768,167,2.908,168,2.311,169,2.908]],["title/classes/ZodValidationPipe.html",[21,0.477,76,1.477]],["body/classes/ZodValidationPipe.html",[3,0.74,4,0.631,5,0.631,7,0.532,8,1.388,11,0.058,12,1.388,14,1.005,16,1.022,17,0.631,20,0.74,21,0.442,22,1.368,24,1.005,26,0.038,27,0.038,76,1.889,78,2.231,79,1.889,80,1.17,81,2.231,82,1.948,104,1.368,105,1.368,108,1.616,109,1.17,135,1.948,168,2.689,170,2.452,171,1.948,172,3.878,173,3.385,174,2.452,175,4.181,176,2.452,177,3.385,178,3.385,179,2.452,180,1.948,181,2.452,182,1.948,183,1.948,184,3.385,185,2.452,186,1.948,187,2.452,188,2.452,189,2.452]],["title/coverage.html",[190,2.351]],["body/coverage.html",[0,1.552,1,1.292,5,0.596,6,1.84,11,0.057,18,0.949,21,0.418,26,0.037,27,0.037,34,1.105,41,0.816,59,1.325,61,1.84,65,1.292,66,1.84,76,1.292,80,1.105,93,0.949,96,1.526,109,1.105,134,1.84,163,1.84,171,1.84,190,1.526,191,2.316,192,2.316,193,2.316,194,4.949,195,3.761,196,2.316,197,1.84,198,2.316,199,4.577,200,1.526,201,1.526,202,4.456,203,1.84,204,3.241,205,3.241,206,1.84,207,1.84,208,1.84,209,2.316,210,2.316,211,1.84,212,2.316,213,2.316]],["title/dependencies.html",[31,1.513,214,1.774]],["body/dependencies.html",[11,0.059,17,0.809,26,0.045,27,0.045,31,1.501,49,2.074,151,2.074,182,2.5,215,3.994,216,3.146,217,3.146,218,3.146,219,3.146,220,3.146,221,3.146,222,3.146,223,3.146,224,3.146,225,3.146,226,3.146,227,3.146,228,3.146,229,3.146,230,3.146,231,3.146]],["title/miscellaneous/functions.html",[232,0.916,233,2.519]],["body/miscellaneous/functions.html",[7,0.816,11,0.051,26,0.051,27,0.051,34,2.266,197,2.989,232,1.542,233,2.989,234,3.762]],["title/index.html",[7,0.484,111,1.774,235,2.234]],["body/index.html",[4,0.585,11,0.057,26,0.036,27,0.036,190,1.498,236,2.273,237,2.273,238,3.211,239,2.273,240,2.273,241,2.273,242,2.273,243,2.273,244,2.273,245,1.806,246,3.723,247,2.273,248,2.273,249,2.273,250,2.273,251,3.723,252,4.553,253,2.273,254,2.273,255,2.273,256,4.43,257,2.273,258,2.273,259,3.211,260,2.273,261,2.273,262,2.273,263,2.273,264,3.211,265,3.211,266,2.273,267,2.273,268,2.273,269,3.211,270,3.211,271,2.273,272,2.273,273,2.273,274,2.273,275,2.273,276,1.806,277,2.273,278,2.273,279,2.273,280,2.273,281,2.273,282,2.273,283,2.273,284,2.273,285,2.273,286,2.273,287,1.806,288,2.273,289,2.273,290,2.273,291,2.273,292,2.273,293,2.273,294,1.806]],["title/modules.html",[30,1.702]],["body/modules.html",[11,0.05,26,0.05,27,0.05,29,2.052,30,1.755,40,1.755,276,3.494,295,4.398,296,4.398,297,4.398]],["title/overview.html",[298,2.834]],["body/overview.html",[2,1.326,11,0.054,18,1.695,21,0.501,26,0.042,27,0.042,28,1.326,29,2.721,30,1.326,31,1.326,32,1.831,33,1.831,34,1.326,35,1.831,36,1.831,37,2.208,38,2.208,39,2.208,40,2.292,41,1.551,42,2.428,43,1.831,44,1.831,60,1.55,93,1.695,129,2.208,130,2.208,298,2.208,299,3.685,300,2.779,301,2.779]],["title/properties.html",[214,1.774,302,2.519]],["body/properties.html",[11,0.057,26,0.05,27,0.05,245,2.923,287,2.923,294,2.923,302,2.923,303,3.679,304,3.679,305,3.679]],["title/miscellaneous/typealiases.html",[232,0.916,306,3.171]],["body/miscellaneous/typealiases.html",[7,0.723,11,0.047,26,0.047,27,0.047,74,3.291,80,1.591,200,2.198,201,2.73,232,1.367,307,3.335,308,3.335,309,4.714,310,4.143,311,3.335,312,4.143,313,2.65,314,3.335,315,4.507,316,3.335]],["title/miscellaneous/variables.html",[232,0.916,317,2.519]],["body/miscellaneous/variables.html",[7,0.378,11,0.057,15,1.474,24,1.083,26,0.03,27,0.03,69,0.972,79,0.972,96,1.742,104,0.972,105,1.474,106,0.972,109,0.831,127,2.348,142,2.099,153,3.202,180,3.202,183,1.384,186,1.384,200,1.148,201,1.742,203,2.099,204,1.384,205,3.042,206,2.099,207,2.099,208,2.099,211,1.384,232,0.714,313,1.384,317,1.384,318,3.563,319,1.743,320,4.031,321,1.743,322,3.192,323,2.643,324,3.83,325,4.031,326,3.83,327,3.192,328,3.563,329,2.643,330,2.643,331,1.743,332,1.743,333,3.192,334,3.192,335,3.192,336,1.743,337,1.743,338,1.743,339,1.743,340,1.743,341,1.743,342,2.643,343,1.743,344,1.743,345,1.743,346,1.743,347,2.643,348,1.743,349,1.743,350,1.743,351,1.743,352,1.743,353,1.743,354,1.743,355,1.743,356,1.743,357,1.743,358,1.743,359,1.743,360,1.743]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":304,"title":{},"body":{"properties.html":{}}}],["0.1.14",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":301,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["17.11.0",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":299,"title":{},"body":{"overview.html":{}}}],["3",{"_index":300,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["3.22.4",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adventure",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":307,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":277,"title":{},"body":{"index.html":{}}}],["animation",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":254,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":244,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":69,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":287,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":106,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":278,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":181,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":188,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["basemovieschema",{"_index":206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["basemovieschema.partial",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basemovieschema.required",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biography",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":88,"title":{},"body":{"controllers/MoviesController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":297,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":295,"title":{},"body":{"modules.html":{}}}],["building",{"_index":239,"title":{},"body":{"index.html":{}}}],["catch",{"_index":186,"title":{},"body":{"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":21,"title":{"classes/ZodValidationPipe.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":170,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_moviesmodule",{"_index":129,"title":{},"body":{"modules/MoviesModule.html":{},"overview.html":{}}}],["cluster_moviesmodule_providers",{"_index":130,"title":{},"body":{"modules/MoviesModule.html":{},"overview.html":{}}}],["comedy",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["config/validation",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{}}}],["configmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(error",{"_index":187,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["const",{"_index":104,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{}}}],["constructor(prisma",{"_index":136,"title":{},"body":{"injectables/MoviesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{}}}],["constructor(schema",{"_index":174,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/MoviesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{},"coverage.html":{}}}],["controller('movies",{"_index":102,"title":{},"body":{"controllers/MoviesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["coverage",{"_index":190,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":70,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["create(@body",{"_index":119,"title":{},"body":{"controllers/MoviesController.html":{}}}],["create(createmoviedto",{"_index":73,"title":{},"body":{"controllers/MoviesController.html":{}}}],["create(data",{"_index":139,"title":{},"body":{"injectables/MoviesService.html":{}}}],["createdmovie",{"_index":120,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["createmoviedto",{"_index":74,"title":{},"body":{"controllers/MoviesController.html":{},"miscellaneous/typealiases.html":{}}}],["createmovieschema",{"_index":96,"title":{},"body":{"controllers/MoviesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":122,"title":{},"body":{"controllers/MoviesController.html":{}}}],["crime",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentyear",{"_index":207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cursor",{"_index":155,"title":{},"body":{"injectables/MoviesService.html":{}}}],["data",{"_index":142,"title":{},"body":{"injectables/MoviesService.html":{},"miscellaneous/variables.html":{}}}],["date().getfullyear",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{}}}],["default",{"_index":320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default(5",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":245,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":255,"title":{},"body":{"index.html":{}}}],["director",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentary",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["drama",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/create",{"_index":99,"title":{},"body":{"controllers/MoviesController.html":{}}}],["dto/schema/base",{"_index":97,"title":{},"body":{"controllers/MoviesController.html":{}}}],["duration",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":266,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":240,"title":{},"body":{"index.html":{}}}],["email",{"_index":126,"title":{},"body":{"controllers/MoviesController.html":{}}}],["error",{"_index":105,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["error(string(error",{"_index":160,"title":{},"body":{"injectables/MoviesService.html":{}}}],["example",{"_index":251,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["express",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":164,"title":{},"body":{"injectables/PrismaService.html":{}}}],["failed",{"_index":189,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["family",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fantasy",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fi",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{}}}],["findall",{"_index":71,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["findall(params",{"_index":143,"title":{},"body":{"injectables/MoviesService.html":{}}}],["findone",{"_index":72,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["findone(@param('id",{"_index":114,"title":{},"body":{"controllers/MoviesController.html":{}}}],["findone(id",{"_index":84,"title":{},"body":{"controllers/MoviesController.html":{}}}],["findone(moviewhereuniqueinput",{"_index":147,"title":{},"body":{"injectables/MoviesService.html":{}}}],["framework",{"_index":238,"title":{},"body":{"index.html":{}}}],["function",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":233,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genre.dto.ts",{"_index":201,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":85,"title":{},"body":{"controllers/MoviesController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":111,"title":{"index.html":{}},"body":{"controllers/MoviesController.html":{}}}],["grow",{"_index":273,"title":{},"body":{"index.html":{}}}],["gte(0",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gte(1888",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":284,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":291,"title":{},"body":{"index.html":{}}}],["id",{"_index":87,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["identifier",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":168,"title":{},"body":{"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["injectable",{"_index":59,"title":{"injectables/AppService.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["installation",{"_index":250,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":253,"title":{},"body":{"index.html":{}}}],["int",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integer",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internalservererrorexception",{"_index":89,"title":{},"body":{"controllers/MoviesController.html":{}}}],["internalservererrorexception(error",{"_index":110,"title":{},"body":{"controllers/MoviesController.html":{}}}],["invalid_type_error",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":280,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":288,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["license",{"_index":294,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":270,"title":{},"body":{"index.html":{}}}],["literal",{"_index":144,"title":{},"body":{"injectables/MoviesService.html":{}}}],["load",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["lte(10",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lte(currentyear",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["miscellaneous",{"_index":232,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":269,"title":{},"body":{"index.html":{}}}],["mode",{"_index":259,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/MoviesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":283,"title":{},"body":{"index.html":{}}}],["movie",{"_index":113,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["movie.dto",{"_index":100,"title":{},"body":{"controllers/MoviesController.html":{}}}],["movie.dto.ts",{"_index":309,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["movie.schema",{"_index":98,"title":{},"body":{"controllers/MoviesController.html":{}}}],["movie.schema.ts",{"_index":205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["movies",{"_index":68,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["movies.controller",{"_index":132,"title":{},"body":{"modules/MoviesModule.html":{}}}],["movies.service",{"_index":94,"title":{},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{}}}],["movies/movies.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["moviescontroller",{"_index":65,"title":{"controllers/MoviesController.html":{}},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"coverage.html":{}}}],["movieservice",{"_index":103,"title":{},"body":{"controllers/MoviesController.html":{}}}],["moviesmodule",{"_index":40,"title":{"modules/MoviesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules.html":{},"overview.html":{}}}],["moviesservice",{"_index":93,"title":{"injectables/MoviesService.html":{}},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"coverage.html":{},"overview.html":{}}}],["moviewhereuniqueinput",{"_index":150,"title":{},"body":{"injectables/MoviesService.html":{}}}],["myśliwiec",{"_index":289,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":246,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":293,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":109,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":237,"title":{},"body":{"index.html":{}}}],["null",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":153,"title":{},"body":{"injectables/MoviesService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":112,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["onmoduleinit",{"_index":166,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":271,"title":{},"body":{"index.html":{}}}],["optional",{"_index":81,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{}}}],["orderby",{"_index":157,"title":{},"body":{"injectables/MoviesService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["overview",{"_index":298,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":214,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":90,"title":{},"body":{"controllers/MoviesController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{}}}],["params",{"_index":146,"title":{},"body":{"injectables/MoviesService.html":{}}}],["parsedvalue",{"_index":184,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["pipetransform",{"_index":172,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["please",{"_index":281,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":252,"title":{},"body":{"index.html":{}}}],["post",{"_index":91,"title":{},"body":{"controllers/MoviesController.html":{}}}],["post(\"user",{"_index":123,"title":{},"body":{"controllers/MoviesController.html":{}}}],["post()@usepipes(new",{"_index":75,"title":{},"body":{"controllers/MoviesController.html":{}}}],["prefix",{"_index":67,"title":{},"body":{"controllers/MoviesController.html":{}}}],["prisma",{"_index":138,"title":{},"body":{"injectables/MoviesService.html":{}}}],["prisma.moviecreateinput",{"_index":140,"title":{},"body":{"injectables/MoviesService.html":{}}}],["prisma.movieorderbywithrelationinput",{"_index":158,"title":{},"body":{"injectables/MoviesService.html":{}}}],["prisma.moviewhereinput",{"_index":156,"title":{},"body":{"injectables/MoviesService.html":{}}}],["prisma.moviewhereuniqueinput",{"_index":148,"title":{},"body":{"injectables/MoviesService.html":{}}}],["prisma/client",{"_index":151,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":165,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":41,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":261,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":236,"title":{},"body":{"index.html":{}}}],["project",{"_index":272,"title":{},"body":{"index.html":{}}}],["promise",{"_index":127,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":302,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["rate",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":282,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{}}}],["reflect",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":249,"title":{},"body":{"index.html":{}}}],["required",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required_error",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{}}}],["romance",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":256,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":241,"title":{},"body":{"index.html":{}}}],["schema",{"_index":177,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["sci",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":242,"title":{},"body":{"index.html":{}}}],["side",{"_index":243,"title":{},"body":{"index.html":{}}}],["signupuser",{"_index":124,"title":{},"body":{"controllers/MoviesController.html":{}}}],["skip",{"_index":152,"title":{},"body":{"injectables/MoviesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"injectables/PrismaService.html":{},"classes/ZodValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":275,"title":{},"body":{"index.html":{}}}],["src/.../base",{"_index":318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":308,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../to.ts",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../update",{"_index":311,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validate",{"_index":313,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/pipes/validation.pipe",{"_index":95,"title":{},"body":{"controllers/MoviesController.html":{}}}],["src/common/pipes/validation.pipe.ts",{"_index":171,"title":{},"body":{"classes/ZodValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validation.pipe.ts:4",{"_index":176,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["src/common/pipes/validation.pipe.ts:7",{"_index":179,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["src/main.ts",{"_index":197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/movies/dto/create",{"_index":314,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/movies/dto/genre/validate",{"_index":200,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/movies/dto/schema/base",{"_index":204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/movies/dto/update",{"_index":316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/movies/movies.controller.ts",{"_index":66,"title":{},"body":{"controllers/MoviesController.html":{},"coverage.html":{}}}],["src/movies/movies.controller.ts:22",{"_index":83,"title":{},"body":{"controllers/MoviesController.html":{}}}],["src/movies/movies.controller.ts:32",{"_index":86,"title":{},"body":{"controllers/MoviesController.html":{}}}],["src/movies/movies.controller.ts:47",{"_index":77,"title":{},"body":{"controllers/MoviesController.html":{}}}],["src/movies/movies.module.ts",{"_index":131,"title":{},"body":{"modules/MoviesModule.html":{}}}],["src/movies/movies.service.ts",{"_index":134,"title":{},"body":{"injectables/MoviesService.html":{},"coverage.html":{}}}],["src/movies/movies.service.ts:11",{"_index":145,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/movies/movies.service.ts:35",{"_index":149,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/movies/movies.service.ts:49",{"_index":141,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/movies/movies.service.ts:7",{"_index":137,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/prisma/prisma.service",{"_index":133,"title":{},"body":{"modules/MoviesModule.html":{},"injectables/MoviesService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":163,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":167,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/utils/to",{"_index":101,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["src/utils/to.ts",{"_index":211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":257,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":260,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":262,"title":{},"body":{"index.html":{}}}],["started",{"_index":235,"title":{"index.html":{}},"body":{}}],["starter",{"_index":248,"title":{},"body":{"index.html":{}}}],["statements",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":285,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"miscellaneous/variables.html":{}}}],["string(id",{"_index":116,"title":{},"body":{"controllers/MoviesController.html":{}}}],["support",{"_index":276,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":296,"title":{},"body":{"modules.html":{}}}],["table",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":154,"title":{},"body":{"injectables/MoviesService.html":{}}}],["test",{"_index":265,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":268,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":267,"title":{},"body":{"index.html":{}}}],["tests",{"_index":264,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":274,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":169,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.movieservice.create(createmoviedto",{"_index":121,"title":{},"body":{"controllers/MoviesController.html":{}}}],["this.movieservice.findone",{"_index":115,"title":{},"body":{"controllers/MoviesController.html":{}}}],["this.prisma.movie.create",{"_index":162,"title":{},"body":{"injectables/MoviesService.html":{}}}],["this.prisma.movie.findmany",{"_index":159,"title":{},"body":{"injectables/MoviesService.html":{}}}],["this.prisma.movie.findunique",{"_index":161,"title":{},"body":{"injectables/MoviesService.html":{}}}],["this.schema.parse(value",{"_index":185,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["this.userservice.createuser(userdata",{"_index":128,"title":{},"body":{"controllers/MoviesController.html":{}}}],["thriller",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throw",{"_index":108,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{}}}],["title",{"_index":322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to(this.movieservice.findall",{"_index":107,"title":{},"body":{"controllers/MoviesController.html":{}}}],["touch",{"_index":286,"title":{},"body":{"index.html":{}}}],["transform",{"_index":173,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["transform(value",{"_index":178,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["try",{"_index":183,"title":{},"body":{"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":292,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":306,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":247,"title":{},"body":{"index.html":{}}}],["unit",{"_index":263,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":82,"title":{},"body":{"controllers/MoviesController.html":{},"classes/ZodValidationPipe.html":{}}}],["unlicensed",{"_index":305,"title":{},"body":{"properties.html":{}}}],["updatemoviedto",{"_index":310,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["updatemovieschema",{"_index":208,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usepipes",{"_index":92,"title":{},"body":{"controllers/MoviesController.html":{}}}],["usepipes(new",{"_index":117,"title":{},"body":{"controllers/MoviesController.html":{}}}],["userdata",{"_index":125,"title":{},"body":{"controllers/MoviesController.html":{}}}],["validategenredto",{"_index":312,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["validategenreschema",{"_index":203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["validationschema",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":180,"title":{},"body":{"classes/ZodValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":317,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":303,"title":{},"body":{"properties.html":{}}}],["war",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":258,"title":{},"body":{"index.html":{}}}],["website",{"_index":290,"title":{},"body":{"index.html":{}}}],["world",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["year",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":279,"title":{},"body":{"index.html":{}}}],["z",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.array",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.enum",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":315,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["z.object",{"_index":321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":182,"title":{},"body":{"classes/ZodValidationPipe.html":{},"dependencies.html":{}}}],["zodschema",{"_index":175,"title":{},"body":{"classes/ZodValidationPipe.html":{}}}],["zodvalidationpipe",{"_index":76,"title":{"classes/ZodValidationPipe.html":{}},"body":{"controllers/MoviesController.html":{},"classes/ZodValidationPipe.html":{},"coverage.html":{}}}],["zodvalidationpipe(createmovieschema",{"_index":118,"title":{},"body":{"controllers/MoviesController.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nMoviesModule\n\nMoviesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMoviesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MoviesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { MoviesModule } from './movies/movies.module';\nimport configuration from './config/configuration';\nimport validation from './config/validation';\nimport { PrismaService } from './prisma/prisma.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n      validationSchema: validation,\n    }),\n    MoviesModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MoviesController.html":{"url":"controllers/MoviesController.html","title":"controller - MoviesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MoviesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/movies/movies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                movies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMovieDto: CreateMovieDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ZodValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/movies/movies.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMovieDto\n                                            \n                                                            CreateMovieDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/movies/movies.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/movies/movies.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  InternalServerErrorException,\n  Param,\n  Post,\n  UsePipes,\n} from '@nestjs/common';\nimport { MoviesService } from './movies.service';\nimport { ZodValidationPipe } from 'src/common/pipes/validation.pipe';\nimport { createMovieSchema } from './dto/schema/base-movie.schema';\nimport { CreateMovieDto } from './dto/create-movie.dto';\nimport { to } from 'src/utils/to';\n\n@Controller('movies')\nexport class MoviesController {\n  constructor(private readonly movieService: MoviesService) {}\n\n  // get all movies\n  @Get()\n  async findAll() {\n    const [movies, error] = await to(this.movieService.findAll({}));\n    if (error)\n      throw new InternalServerErrorException(error, 'Error getting movies');\n\n    return movies;\n  }\n\n  // get one movie by id\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const [movie, error] = await to(\n      this.movieService.findOne({\n        id: String(id),\n      }),\n    );\n    if (error)\n      throw new InternalServerErrorException(error, 'Error getting movie');\n\n    return movie;\n  }\n\n  // create a movie\n  @Post()\n  @UsePipes(new ZodValidationPipe(createMovieSchema))\n  async create(@Body() createMovieDto: CreateMovieDto) {\n    const [createdMovie, error] = await to(\n      this.movieService.create(createMovieDto),\n    );\n    if (error)\n      throw new InternalServerErrorException(error, 'Error creating movie');\n\n    return createdMovie;\n  }\n}\n\n// @Post(\"user\")\n// async signupUser(\n// \t@Body() userData: { name?: string; email: string }\n// ): Promise {\n// \treturn this.userService.createUser(userData);\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoviesModule.html":{"url":"modules/MoviesModule.html","title":"module - MoviesModule","body":"\n                   \n\n\n\n\n    Modules\n    MoviesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoviesModule\n\n\n\ncluster_MoviesModule_providers\n\n\n\n\nMoviesService\n\nMoviesService\n\n\n\nMoviesModule\n\nMoviesModule\n\nMoviesModule -->\n\nMoviesService->MoviesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nMoviesModule -->\n\nPrismaService->MoviesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/movies/movies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MoviesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MoviesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MoviesService } from './movies.service';\nimport { MoviesController } from './movies.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [MoviesController],\n  providers: [MoviesService, PrismaService],\n})\nexport class MoviesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoviesService.html":{"url":"injectables/MoviesService.html","title":"injectable - MoviesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MoviesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/movies/movies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/movies/movies.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Prisma.MovieCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/movies/movies.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Prisma.MovieCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/movies/movies.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(movieWhereUniqueInput: Prisma.MovieWhereUniqueInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/movies/movies.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                movieWhereUniqueInput\n                                            \n                                                        Prisma.MovieWhereUniqueInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Movie, Prisma } from '@prisma/client';\nimport { to } from 'src/utils/to';\n\n@Injectable()\nexport class MoviesService {\n  constructor(private prisma: PrismaService) {}\n\n  // get all movies\n  async findAll(params: {\n    skip?: number;\n    take?: number;\n    cursor?: Prisma.MovieWhereUniqueInput;\n    where?: Prisma.MovieWhereInput;\n    orderBy?: Prisma.MovieOrderByWithRelationInput;\n  }): Promise {\n    const { skip, take, cursor, where, orderBy } = params;\n\n    const [movies, error] = await to(\n      this.prisma.movie.findMany({\n        skip,\n        take,\n        cursor,\n        where,\n        orderBy,\n      }),\n    );\n    if (error) throw new Error(String(error));\n\n    return movies;\n  }\n\n  // get one movie by id\n  async findOne(\n    movieWhereUniqueInput: Prisma.MovieWhereUniqueInput,\n  ): Promise {\n    const [movie, error] = await to(\n      this.prisma.movie.findUnique({\n        where: movieWhereUniqueInput,\n      }),\n    );\n    if (error) throw new Error(String(error));\n\n    return movie;\n  }\n\n  // create a movie\n  async create(data: Prisma.MovieCreateInput): Promise {\n    const [createdMovie, error] = await to(\n      this.prisma.movie.create({\n        data,\n      }),\n    );\n    if (error) throw new Error(String(error));\n\n    return createdMovie;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ZodValidationPipe.html":{"url":"classes/ZodValidationPipe.html","title":"class - ZodValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ZodValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ZodSchema)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/validation.pipe.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ZodSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pipes/validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, BadRequestException } from '@nestjs/common';\nimport { ZodSchema } from 'zod';\n\nexport class ZodValidationPipe implements PipeTransform {\n  constructor(private schema: ZodSchema) {}\n\n  transform(value: unknown) {\n    try {\n      const parsedValue = this.schema.parse(value);\n      return parsedValue;\n    } catch (error) {\n      console.log(error);\n      throw new BadRequestException('Validation failed');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/pipes/validation.pipe.ts\n            \n            class\n            ZodValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movies/dto/genre/validate-genre.dto.ts\n            \n            variable\n            validateGenreSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movies/dto/schema/base-movie.schema.ts\n            \n            variable\n            baseMovieSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movies/dto/schema/base-movie.schema.ts\n            \n            variable\n            createMovieSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movies/dto/schema/base-movie.schema.ts\n            \n            variable\n            currentYear\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movies/dto/schema/base-movie.schema.ts\n            \n            variable\n            updateMovieSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movies/movies.controller.ts\n            \n            controller\n            MoviesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/movies/movies.service.ts\n            \n            injectable\n            MoviesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/to.ts\n            \n            variable\n            to\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.3.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.7.1\n        \n            joi : ^17.11.0\n        \n            reflect-metadata : ^0.1.14\n        \n            rxjs : ^7.8.1\n        \n            zod : ^3.22.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoviesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MoviesModule\n\n\n\ncluster_MoviesModule_providers\n\n\n\n\nMoviesModule\n\nMoviesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMoviesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nMoviesModule -->\n\nPrismaService->MoviesModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nMoviesService\n\nMoviesService\n\nMoviesModule -->\n\nMoviesService->MoviesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateMovieDto   (src/.../create-movie.dto.ts)\n                        \n                        \n                            UpdateMovieDto   (src/.../update-movie.dto.ts)\n                        \n                        \n                            ValidateGenreDto   (src/.../validate-genre.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/movies/dto/create-movie.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateMovieDto\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/movies/dto/update-movie.dto.ts\n    \n    \n        \n            \n                \n                    \n                    UpdateMovieDto\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/movies/dto/genre/validate-genre.dto.ts\n    \n    \n        \n            \n                \n                    \n                    ValidateGenreDto\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            baseMovieSchema   (src/.../base-movie.schema.ts)\n                        \n                        \n                            createMovieSchema   (src/.../base-movie.schema.ts)\n                        \n                        \n                            currentYear   (src/.../base-movie.schema.ts)\n                        \n                        \n                            to   (src/.../to.ts)\n                        \n                        \n                            updateMovieSchema   (src/.../base-movie.schema.ts)\n                        \n                        \n                            validateGenreSchema   (src/.../validate-genre.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/movies/dto/schema/base-movie.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseMovieSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  title: z.string({\n    required_error: 'Title is required',\n    invalid_type_error: 'Title must be a string',\n  }),\n  year: z\n    .number({\n      required_error: 'Year is required',\n      invalid_type_error: 'Year must be an integer number',\n    })\n    .int()\n    .gte(1888)\n    .lte(currentYear),\n  director: z.string({\n    required_error: 'Director is required',\n    invalid_type_error: 'Director must be a string',\n  }),\n  duration: z\n    .number({\n      required_error: 'Duration is required',\n      invalid_type_error: 'Duration must be an integer number',\n    })\n    .int(),\n  rate: z\n    .number({\n      required_error: 'Rate is required',\n      invalid_type_error: 'Rate must be a number',\n    })\n    .gte(0)\n    .lte(10)\n    .default(5),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMovieSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : baseMovieSchema.required()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMovieSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : baseMovieSchema.partial()\n                    \n                \n\n\n        \n    \n\n    src/utils/to.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  promise: Promise,\n): Promise => {\n  try {\n    const data = await promise;\n    return [data, null];\n  } catch (error) {\n    return [null, error];\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/movies/dto/genre/validate-genre.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateGenreSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    name: z.array(\n      z.enum([\n        'Action',\n        'Crime',\n        'Romance',\n        'Adventure',\n        'Animation',\n        'Biography',\n        'Comedy',\n        'Crime',\n        'Documentary',\n        'Drama',\n        'Family',\n        'Fantasy',\n        'Sci-Fi',\n        'Thriller',\n        'War',\n      ]),\n    ),\n  })\n  .required()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
